- Bugs
	- Anything except solid brushes intersecting with an object causes FPS to GRADUALLY decrease. Removing the not solid brush from the object will make FPS GRADUALLY increase (in gm_construct).
	- Bouyancy calculations taking too long(?) Large amounts of lag caused if many objects are intersecting with water at once.
	- Dynamite model acts odd (inconsistency between server and client predictions?) Physical model is detached from graphical model.
	- IsAsleep() returning true causes lag freeze (Only when object asleep on displacements?)
	- Mystical magnetic properities depending on if using singlethreaded or multithreaded.
		- Singlethreaded: attractive (literally, use your physgun)
		- Multithreaded: repulsive (object will bounce if on top of another)
	- Immense lag when an object is welded to world and crash when removing that weld in materialsystem
	- Parallel Constraint Solver crash: Manifold has a body that isn't in the bodies array!
	- VEHICLES:
		- Physical wheels slowly sink.
	- Rotations
		- Something weird happens with the rotations. When HL.x > 90 || HL.x < -90, the RETURNED angles from GetPosition start messing up.
			- Run this code: lua_run local ent = player.GetByID(1):GetEyeTrace().Entity local i = 0 hook.Add("Think", "asdft", function() if i > 180 then i = -180 end print(tostring(ent:GetAngles()) .. " i(" .. i .. ")") ent:SetAngles(Angle(i, 0, 0)) i = i + 1 end)
- TODO
	- Support concave meshes (see: trash dumpster)
	- In the future, expose unexposed functions to the lua states under table physenv (or get garry to support them). Expose features such as:
		- Soft bodies
		- Scaling of models
		- ...
	- IPhysicsCollisionEvent::Friction controls sound and effects! Implement this!